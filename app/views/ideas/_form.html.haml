= form_for idea do |f|
  - if idea.errors.any?
    .alert.alert-error
      = f.error_messages
  = hidden_field_tag 'idea[state]', idea.state_machine.state_name

  .row.control-group.af-mutable-content
    .span12
      = f.label :category
    .span7
      = f.select :category, idea_category_select_options(current_user, idea)
    .span5.af-mutable.af-dim
      .ht-with-margin-icon.help-block
        .ht-margin-icon
          %i.icon-info-sign
        = _('Ideas have one (mandatory) category. This typically designates the main area the idea applies to, or the main category of users which will be affected, should the idea be completed.')

  .row.control-group.af-mutable-content
    .span12
      = f.label :title
    .span7
      = f.text_field :title, placeholder: _('Type something...')
    .span5.af-mutable.af-dim
      .ht-with-margin-icon.help-block
        .ht-margin-icon
          %i.icon-info-sign
        = _('This is your pitch. Keep it short and to the point, and bear in mind that many users will not continue with the details if your title is not appealing.')

  .row.control-group.af-mutable-content
    .span12
      = f.label :problem
    .span7
      = f.text_area :problem, rows: 8, placeholder: _('Type something...')
    .span5.af-mutable.af-dim
      .ht-with-margin-icon.help-block
        .ht-margin-icon
          %i.icon-info-sign
        = _('This is where you state the problem your idea aims to solve. It will be displayed after the title in the index of idea, so keep in mind it\'s core to how others will discover and consider your idea (or will ignore it). Make this about specific users, use cases, and data-backed facts. If the problem you are trying to solve is not obvious after reading this, your team will not go any further.')

  .row.control-group.af-mutable-content
    .span12
      = f.label :solution
    .span7
      = f.text_area :solution, rows: 8, placeholder: _('Type something...')
    .span5.af-mutable.af-dim
      .ht-with-margin-icon.help-block
        .ht-margin-icon
          %i.icon-info-sign
        = _('How would you suggest to solve the issue above? Try your best to be SMART here: address your specific problem, show that this solution is realistic and can be achieved within your team constraints. If this is pie-in-the-sky, again, people will drop. Make sure you attach any relevant data and diagrams, as a napkin sketch is almost mandatory here. You\'ll have a chance to do so on the next page.')

  .row.control-group.af-mutable-content
    .span12
      = f.label :metrics
    .span7
      = f.text_area :metrics, rows: 6, placeholder: _('Type something...')
    .span5.af-mutable.af-dim
      .ht-with-margin-icon.help-block
        .ht-margin-icon
          %i.icon-info-sign
        = _('How are we going to measure that your solution was successful? Mention it here. This will typically be business-centric, quantitative, measurable metrics that are tied to your problem and should be positively affected by your envisionned solution.')

  .row.af-mutable-content
    .span7.text-center
      - data_options = { disable_with:_('Saving...') }
      - if idea.new_record?
        = f.submit _('Submit idea'),   class: 'btn btn-primary', data:data_options
        = f.submit _('Save as draft'), class: 'btn', data:data_options.merge(setstate: 'draft')
        - cancel_path = ideas_path
      - elsif idea.state_machine.draft?
        = f.submit _('Submit idea'), class: 'btn', data:data_options.merge(setstate: 'submitted')
        = f.submit _('Update draft'), class: 'btn btn-primary', data:data_options
        - cancel_path = idea_path(idea)
      - else
        = f.submit _('Update idea'), class: 'btn btn-primary', data:data_options
        - cancel_path = idea_path(idea)
      %a.btn{ href: cancel_path }= _('Cancel')
    .span5.af-mutable.af-dim
      .ht-with-margin-icon.help-block
        .ht-margin-icon
          %i.icon-info-sign
        = _('You\'ll probably want to attach some files to this ideaâ€”perhaps a photo of a napkin sketch or a spreadsheet with graphs to back you up and prove how great this is going to be. Don\'t fret, we\'ll let you do so as soon as you\'ve saved.')
  :coffeescript
    $("input[data-setstate]").click(() ->
      state_value = $(this).data('setstate')
      $(this).closest('form').find('input#idea_state').val(state_value)
      true
    )

    $('.field_with_errors').closest('.control-group').addClass('error')
